≤≤ define "preamble"≥≥

\usepackage{amsmath}  
\usepackage{amssymb}                  % some math symbols
\usepackage{anysize}                  % control margins if we want to
\usepackage[≤≤ . ≥≥]{babel}
\usepackage[
  pdfborder=0 0 1, bookmarks=true, pdftoolbar=true, pdfmenubar=true,
  colorlinks=true, linkcolor=black, citecolor=black, filecolor=black,
  urlcolor=black]{hyperref}
\usepackage{color}
\usepackage{calc}
\usepackage{dsfont}                   % additional math font
\usepackage{fontspec}
\usepackage{graphicx}
\usepackage[utf8]{inputenc}
\usepackage{lmodern}                  % tug.dk/FontCatalogue/lmodern
\usepackage{longtable}                % so tutor tables may page break
\usepackage{pdflscape}                % insert landscape pages
\usepackage{marvosym}                 % more symbols
% \usepackage{multicol}               % not in use
%\usepackage[protrusion,expansion]{microtype} % nicer typesetting
%\usepackage{coloremoji}
\usepackage[olditem,oldenum]{paralist}% use less space for lists
\usepackage{pdfpages}                 % for including the sample sheets
\usepackage{pgf}                      % answers; drawings with jpgjdraw
\usepackage{pgffor}                   % for each loops
\usepackage{pgfplots}                 % histograms, error bars, …
\pgfplotsset{compat=1.16}
\usetikzlibrary{patterns,positioning} % some fancy stuff
\usepackage{textcomp}                 % symbols, e.g. \textrightarrow
\usepackage[breakall]{truncate}       % trim overlong strings
\usepackage{xparse}                   % nicer than newcommand
\newfontfamily\DejaSans{DejaVu Sans}
\usepackage{xstring}                  % common string functions for TeX
% FIXME: these should be in a separate tex.erb
\newcommand{\kurskopf}[5]{\clearpage
  \chapter{#1 #5 #2}}


% common methods %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Finds the nth argument in a comma separated list. Zero based. Usage:
% \findNthArgument{30,40,5,10,5}{1} % 40
% The value is also available in \lastFindNthArgument after the command
% has been executed.
\newcommand\findNthArgument[2]{
  \StrBetween[\numexpr#2+1,\numexpr#2+2]{,#1,}{,}{,}[\lastFindNthArgument]
  \lastFindNthArgument
}

% Defines how the question will be typeset in TikZ. Usage within TikZ:
% \globalQuestionStyle{some question}
\newcommand{\globalQuestion}[1]{
  \draw (0,0) node[text width=6.95cm, text justified, inner sep=0]
                (question text){#1};
}

% Defines in plain (La)TeX how number values should be typeset (i.e. the
% “answers: 123, abstention: 123” line)
\newcommand{\globalNumberStyle}{\footnotesize}

% shortcut used to highlight spelling errors when previewing online
\newcommand{\spellingerror}[1]{\textcolor{red}{#1}}

%commands needed for diagrams%
% allows cencoring text blocks. Be aware that TeX has its issues with
% this. For example, manual line breaks will break this method.
%
% Usage example:
% \CENSORED
% \begin{itemize}
%   \item asd
% \end{itemize}
% \UNCENSORED


\def\removerestofline{\begingroup \catcode`\^^M=\active \RemoveRestOfLine}
\begingroup
  \catcode`\^^M=\active %
  \gdef\RemoveRestOfLine#1^^M{	\endgroup}
\endgroup

\def\CENSORED{
  \let\olditem\item
  \def \item {\olditem
    \protect\rule[-.3ex]{\textwidth}{2ex}
    \removerestofline
  }
 }
\def\UNCENSORED{
  \let\item\olditem
}
% Draws horizontal bars for the given items. 100%, or a filled bar, are
% given in #3 argument. Expects a comma separated list of descriptions
% in #1 and the absolute occurrences for that items in #2. The last item
% given will be printed on top. Example usage:
% \singleHorizontalBars{first item, second item}{20,150}{150}
\newcommand{\multiHorizontalBars}[3]{
  % calculate amount of arguments as well as ymax and height. These
  % cannot directly be calculated in the axis environment, therefore it
  % is done here.
  \StrCount{#2,}{,}[\argumentCount]
  \pgfmathparse{\argumentCount+1}
  \let\calcymax\pgfmathresult
  % the "2" is fixed space that is used regardless of how many answers
  % there are. The 0.5 is the amount of space a single answer takes up.
  \pgfmathparse{\argumentCount*0.5+2}
  \let\calcheight\pgfmathresult

  % generate the coordinates which will later be parsed. The y-value
  % is simply counted up while the x-value is taken from #1. Also
  % generates the extra y ticks string.
  \gdef\coordAString{}
  \gdef\extraYTicksString{}
  \foreach \y in {1,...,\argumentCount}
    \findNthArgument{#2}{\numexpr\y-1}
    \xdef\coordAString{\coordAString (\lastFindNthArgument, \y)}
    \xdef\extraYTicksString{\extraYTicksString,\y}
  ;
  % remove superfluous comma at the start
  \StrBehind{\extraYTicksString}{,}[\extraYTicksString]
  % calculate the "not checked" side of the plot to simulate an x%
  % filled bar, which is not possible out of the box with pgfplots.
  \gdef\coordBString{}
  \foreach \y in {1,...,\argumentCount}
    \findNthArgument{#2}{\numexpr\y-1}
    \pgfmathparse{#3-\lastFindNthArgument}
    \xdef\coordBString{\coordBString (\pgfmathresult, \y)}
  ;

  % move much further to the right. The right side of the question is
  % used as starting point, and the diagram will be placed at the
  % coordinates below with the left end of the top bar. In other words:
  % the description of each bar is not taken into account and might
  % overflow into the question text.
  \path (question text.north east) ++(4cm,0) coordinate (question text end);

  \begin{axis}[
    name=horizontalBars,
    at={(question text end)},
    anchor=north west,
    % make it xbar so that we get horizontal bars and stacked, so that
    % we can easily draw a partly filled bar.
    xbar stacked,
    % set the limits so each bar appears nicely
    xmin=0, xmax=#3, ymin = 0, ymax = \calcymax,
    height = {\calcheight cm},
    bar width = 0.4cm,
    width=7cm,
    % hide the box around the plot
    axis x line=none,
    every outer y axis line/.append style={white},
    % hide x labels
    xtick=\empty,
    % hide little grey markers on top or below the actual plot
    major y tick style={draw=none},
    minor y tick style={draw=none},
    % define where to place ticks. Normal ticks are placed to the left
    % and contain each item’s description. Extra ticks contain the
    % absolute occurence of that item and are placed to the right.
    ytick=data,
    yticklabels={#1},
    extra y ticks={\extraYTicksString},
    extra y tick labels={#2},
    extra y tick style={ytick pos=right, yticklabel pos=right},
    % make them a little bit smaller
    tick label style={font=\footnotesize},
    ]
    % draw the filled part. Since \addplot doesn’t expand variables, we
    % need to do it manually so that \coordAString may be read correctly.
    \edef\temp{\noexpand\addplot[black,fill=black] coordinates {\coordAString};}
    \temp
    % draw the empty part
    \edef\temp{\noexpand\addplot[black,fill=white] coordinates {\coordBString};}
    \temp
  \end{axis}
}
\def\CENSORED{
  \relax
}
\def\UNCENSORED{
  \relax
}
% Includes definitions for single_histogram.tex.erb and only needs
% to be included once.

% Defines the histogram for single_histogram.tex.erb. Assumes “leftmost
% pole” is already present in the TikZ picture. The values should be in
% pgfplot compatible coordinates format. x-value defines the position,
% y-value the percentage of that answer. Usage:
% \singleHistogramHistStyle{values; style: (1,15) (2,50), …}
\newcommand{\singleHistogramHist}[1]{
  % add a little space to the right of the leftmoste pole. For some
  % reason the right= syntax does not work properly on the pfgplots.
  \path (leftmost pole.east) ++(0.2cm,0) coordinate (leftmost pole end);

  \StrCount{#1,}{,}[\argumentCount]
  % pgfplots doesn’t support expressions in xmax, therefore calculate
  % the width of the diagram here.
  \pgfmathparse{\argumentCount+0.5}
  \let\calcxmax\pgfmathresult

  % generate the coordinates which will later be parsed. The x-value
  % is simply counted up while the y-value is taken from #1.
  \gdef\coordString{}
  \foreach \x in {1,...,\argumentCount}
    \findNthArgument{#1}{\numexpr\x-1}
    \xdef\coordString{\coordString (\x, \lastFindNthArgument) };

  \begin{axis}[
    name=histogram,
    % place right of leftmost node
    at={(leftmost pole end)},
    anchor=west,
    % set style to bar plot, set ranges and width
    ybar, ymin=0, ymax=100,
    xmin=0.5, xmax={\calcxmax},
    width=7cm, height=2.5cm,
    % 1.6cm are used for… space, divide the rest between each plot
    bar width = (7cm-1.6cm)/\argumentCount,
    % show tick (and label) for each data point
    xtick=data,
    % disable y-ticks and labels, the axis should be clear
    ytick=\empty,
    % don’t know how to write y-data as label automatically :(
    xticklabel={\findNthArgument{#1}{\ticknum}\%},
    % put these labels above the plot and move them closer
    xticklabel pos=right,
    every x tick label/.style={yshift=-0.2cm},
    % make them a little bit smaller
    tick label style={font=\footnotesize},
    % no magic with the borders, use x/y-min/max values
    enlargelimits=false,
    % this draws the lines between the major ticks
    xminorgrids, minor x tick num=1,
    every minor grid/.append style={color=black},
    % disable little grey markers on top or below the actual plot
    major x tick style={draw=none},
    minor x tick style={draw=none},
  ]
  % addplot is rather picky about its coordinate input. Therefore expand
  % them without addplot knowing and then execute.
  \edef\temp{\noexpand\addplot[black,fill=black] coordinates {\coordString};}
  \temp
  \end{axis}
}

% Defines the error bars for single_histogram.tex.erb. Assumes the
% histogram is already present in the TikZ picture. Usage:
% \singleHistogramErr{data avg}{data stddev}{comparison avg}{cmp stddev}
\NewDocumentCommand\singleHistogramErr{m m O{-1} O{0}}{
  % Define position where to place the avg/stddev plot. It’s currently
  % below the histogram, but moved up slightly.
  \path (histogram.below south west) ++(0,0.1cm)
          coordinate (just below histogram);

  \begin{axis}[
    % make this a scatter plot, but only two points will be used. “this”
    % describes the style for avg/stddev for this data, “comp” for the
    % comparison value used.
    scatter/classes={
      this={mark=*,draw=black},
      comp={mark=*,draw=black,fill=white}},
    % position it correctly
    at={(just below histogram)},
    anchor=north west,
    % same width as for the histogram.
    width=7cm, height=2.1cm,
    % match the width of histogram. I.e. 0.5 to (#of answers)+0.5. We
    % assumed the histogram has been printed, therefore \calcxmax should
    % contain the correct value.
    xmin=0.5, xmax=\calcxmax,
    % disable axis ticks and labels
    xtick=\empty, ytick=\empty,
    axis x line = none, axis y line = none,
    % chosen so that the vertical bars at the end of each error bar fit
    % in the diagram.
    ymin=0, ymax=3]
    % make it a scatter plot, because the coordinates are not related.
    % x value is the average, y value is fixed and only provides order
    % and space between bars.
    \addplot[scatter, only marks]
      % style error bars using classes above
      plot[scatter src=explicit symbolic,error bars/.cd,x dir=both,
            x explicit]
      coordinates {
        %AVG POS  STDDEV   STYLE
        (#1, 2) +- (#2, 0) [this]
        (#3, 1) +- (#4, 0) [comp]
      };
  \end{axis}
}

% Defines the left pole for single_histogram.tex.erb. Assumes the
% question text is already present in the TikZ picture. Usage:
% \singleHistogramPoleLeft{pole text}
\newcommand{\singleHistogramPoleLeft}[1]{
  \draw node[right=2mm of question text.east, text width=2cm,
              text ragged left, inner sep=0] (leftmost pole)
    {\footnotesize #1};
}

% Defines the right pole for single_histogram.tex.erb. Assumes the
% histogram is already present in the TikZ picture. Usage:
% \singleHistogramPoleRight{pole text}
\newcommand{\singleHistogramPoleRight}[1]{
  \draw node[right={2mm of histogram.east}, text width=2cm,
              text ragged, inner sep=0] (rightmost pole)
    {\footnotesize #1};
}
% Draws horizontal bars for the given items. 100%, or a filled bar, is
% the sum of all items. Expects a comma separated list of descriptions
% in #1 and the absolute occurrences for that items in #2. The last item
% given will be printed on top. Example usage:
% \singleHorizontalBars{first item, second item}{20,150}
\newcommand{\singleHorizontalBars}[2]{
  % calculate amount of arguments as well as ymax and height. These
  % cannot directly be calculated in the axis environment, therefore it
  % is done here.
  \StrCount{#2,}{,}[\argumentCount]
  \pgfmathparse{\argumentCount+1}
  \let\calcymax\pgfmathresult
  % the "2" is fixed space that is used regardless of how many answers
  % there are. The 0.5 is the amount of space a single answer takes up.
  \pgfmathparse{\argumentCount*0.5+2}
  \let\calcheight\pgfmathresult

  % generate the coordinates which will later be parsed. The y-value
  % is simply counted up while the x-value is taken from #1. Also calcs
  % the sum of the given input and generates the extra y ticks string.
  \gdef\coordAString{}
  \gdef\extraYTicksString{}
  \gdef\argumentSum{0}
  \foreach \y in {1,...,\argumentCount}
    \findNthArgument{#2}{\numexpr\y-1}
    \xdef\coordAString{\coordAString (\lastFindNthArgument, \y)}
    \xdef\extraYTicksString{\extraYTicksString,\y}
    \pgfmathparse{\argumentSum+\lastFindNthArgument}
    \xdef\argumentSum{\pgfmathresult}
  ;
  % remove superfluous comma at the start
  \StrBehind{\extraYTicksString}{,}[\extraYTicksString]
  % calculate the "not checked" side of the plot to simulate an x%
  % filled bar, which is not possible out of the box with pgfplots.
  \gdef\coordBString{}
  \foreach \y in {1,...,\argumentCount}
    \findNthArgument{#2}{\numexpr\y-1}
    \pgfmathparse{\argumentSum-\lastFindNthArgument}
    \xdef\coordBString{\coordBString (\pgfmathresult, \y)}
  ;

  % move much further to the right. The right side of the question is
  % used as starting point, and the diagram will be placed at the
  % coordinates below with the left end of the top bar. In other words:
  % the description of each bar is not taken into account and might
  % overflow into the question text.
  \path (question text.north east) ++(4cm,0) coordinate (question text end);

  \begin{axis}[
    name=horizontalBars,
    at={(question text end)},
    anchor=north west,
    % make it xbar so that we get horizontal bars and stacked, so that
    % we can easily draw a partly filled bar.
    xbar stacked,
    % set the limits so each bar appears nicely
    xmin=0, xmax=\argumentSum, ymin = 0, ymax = \calcymax,
    height = {\calcheight cm},
    bar width = 0.4cm,
    width=7cm,
    % hide the box around the plot
    axis x line=none,
    every outer y axis line/.append style={white},
    % hide x labels
    xtick=\empty,
    % hide little grey markers on top or below the actual plot
    major y tick style={draw=none},
    minor y tick style={draw=none},
    % define where to place ticks. Normal ticks are placed to the left
    % and contain each item’s description. Extra ticks contain the
    % absolute occurence of that item and are placed to the right.
    ytick=data,
    yticklabels={#1},
    extra y ticks={\extraYTicksString},
    extra y tick labels={#2},
    extra y tick style={ytick pos=right, yticklabel pos=right},
    % make them a little bit smaller
    tick label style={font=\footnotesize},
    ]
    % draw the filled part. Since \addplot doesn’t expand variables, we
    % need to do it manually so that \coordAString may be read correctly.
    \edef\temp{\noexpand\addplot[black,fill=black] coordinates {\coordAString};}
    \temp
    % draw the empty part
    \edef\temp{\noexpand\addplot[black,fill=white] coordinates {\coordBString};}
    \temp
  \end{axis}
}
% init the variable, so the comparison always works, even for the first
% header.
\def\lastSubsectionHeader{}
% Defines an error message that may be used later in the document. For
% documentation on this error please see lib/result_tools.rb method
% include_form_variables or refer to the online documentation when
% editing your forms.

\def\variablesOutOfScopeErr{\PackageError{NO-PACKAGE}{Your form is
roken. You are trying to use variables outside their scope. E.g., if you
want to access lect or lectLast they must only be used from within
repeat_for: :lecturer}}

≤≤ end ≥≥
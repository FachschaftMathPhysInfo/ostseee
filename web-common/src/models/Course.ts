// tslint:disable
/**
 * Evaluation
 * This API descripes the online evaluation service, as accessed by the user and organizers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Tutor,
    TutorFromJSON,
    TutorToJSON,
} from './index';

/**
 * 
 * @export
 * @interface Course
 */
export interface Course  {
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    moduleId: string;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    formId: string;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    termId: string;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    location: string;
    /**
     * 
     * @type {number}
     * @memberof Course
     */
    numberOfStudents: number;
    /**
     * 
     * @type {string}
     * @memberof Course
     */
    language: string;
    /**
     * Third-party Key, that identifies a course
     * @type {string}
     * @memberof Course
     */
    thirdPartyKey?: string;
    /**
     * current status for sent mails for this course
     * @type {string}
     * @memberof Course
     */
    progress: CourseProgressEnum;
    /**
     * Describes whether, this course is published to profs and tutors.
     * @type {string}
     * @memberof Course
     */
    clearance: string;
    /**
     * 
     * @type {Array<Tutor>}
     * @memberof Course
     */
    tutors: Array<Tutor>;
}

export function CourseFromJSON(json: any): Course {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'moduleId': json['moduleId'],
        'formId': json['formId'],
        'termId': json['termId'],
        'location': json['location'],
        'numberOfStudents': json['numberOfStudents'],
        'language': json['language'],
        'thirdPartyKey': !exists(json, 'thirdPartyKey') ? undefined : json['thirdPartyKey'],
        'progress': json['progress'],
        'clearance': json['clearance'],
        'tutors': (json['tutors'] as Array<any>).map(TutorFromJSON),
    };
}

export function CourseToJSON(value?: Course): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'moduleId': value.moduleId,
        'formId': value.formId,
        'termId': value.termId,
        'location': value.location,
        'numberOfStudents': value.numberOfStudents,
        'language': value.language,
        'thirdPartyKey': value.thirdPartyKey,
        'progress': value.progress,
        'clearance': value.clearance,
        'tutors': (value.tutors as Array<any>).map(TutorToJSON),
    };
}

/**
* @export
* @enum {string}
*/
export enum CourseProgressEnum {
    Created = 'created',
    Announced = 'announced',
    InEval = 'inEval',
    Processing = 'processing',
    Published = 'published'
}



// tslint:disable
/**
 * Evaluation
 * This API descripes the online evaluation service, as accessed by the user and organizers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Option,
    OptionFromJSON,
    OptionToJSON,
} from './index';

/**
 * 
 * @export
 * @interface Question
 */
export interface Question  {
    /**
     * 
     * @type {string}
     * @memberof Question
     */
    id?: string;
    /**
     * Unique, humanreadable label.
     * @type {string}
     * @memberof Question
     */
    shortcode: string;
    /**
     * Map of translations for a given string. A string might contain markdown code.
     * @type {{ [key: string]: string; }}
     * @memberof Question
     */
    title: { [key: string]: string; };
    /**
     * Whether this question is a single choice or multiple choice question
     * @type {boolean}
     * @memberof Question
     */
    isMulti: boolean;
    /**
     * Determines whether it is a free text form. Can not occur with isMulti and hasOtherOption.
     * @type {boolean}
     * @memberof Question
     */
    isComment: boolean;
    /**
     * Some questions have an option that allows custom answers
     * @type {boolean}
     * @memberof Question
     */
    hasOtherOption: boolean;
    /**
     * Renders this as a slider. Note: Doesnot work with hasOtherOption
     * @type {boolean}
     * @memberof Question
     */
    isSlider?: boolean;
    /**
     * Question either concerns course, lecturer or tutor.
     * @type {string}
     * @memberof Question
     */
    regards: QuestionRegardsEnum;
    /**
     * Some questions need a not applicable option.
     * @type {boolean}
     * @memberof Question
     */
    hasNotApplicableOption?: boolean;
    /**
     * Defines how results should be displayed.
     * @type {string}
     * @memberof Question
     */
    visualizer: QuestionVisualizerEnum;
    /**
     * Array of possibly labeled selection options.
     * @type {Array<Option>}
     * @memberof Question
     */
    options: Array<Option>;
    /**
     * Used to determine position in array
     * @type {number}
     * @memberof Question
     */
    position?: number;
}

export function QuestionFromJSON(json: any): Question {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'shortcode': json['shortcode'],
        'title': json['title'],
        'isMulti': json['isMulti'],
        'isComment': json['isComment'],
        'hasOtherOption': json['hasOtherOption'],
        'isSlider': !exists(json, 'isSlider') ? undefined : json['isSlider'],
        'regards': json['regards'],
        'hasNotApplicableOption': !exists(json, 'hasNotApplicableOption') ? undefined : json['hasNotApplicableOption'],
        'visualizer': json['visualizer'],
        'options': (json['options'] as Array<any>).map(OptionFromJSON),
        'position': !exists(json, 'position') ? undefined : json['position'],
    };
}

export function QuestionToJSON(value?: Question): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'shortcode': value.shortcode,
        'title': value.title,
        'isMulti': value.isMulti,
        'isComment': value.isComment,
        'hasOtherOption': value.hasOtherOption,
        'isSlider': value.isSlider,
        'regards': value.regards,
        'hasNotApplicableOption': value.hasNotApplicableOption,
        'visualizer': value.visualizer,
        'options': (value.options as Array<any>).map(OptionToJSON),
        'position': value.position,
    };
}

/**
* @export
* @enum {string}
*/
export enum QuestionRegardsEnum {
    Course = 'course',
    Lecturer = 'lecturer',
    Tutor = 'tutor'
}
/**
* @export
* @enum {string}
*/
export enum QuestionVisualizerEnum {
    Histogram = 'histogram',
    Lines = 'lines',
    Comments = 'comments',
    TutorOverview = 'tutor_overview'
}


